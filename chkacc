#!/bin/bash
# ChkAcc - Snoops through auth.log files to see who has logged in and who has failed trying
# For best results, set $RepeatedMsgReduction off in /etc/rsyslog.conf
# Geolocation database needed for -g option
#   apt install geoip-bin geoip-database
# Written by Fred Theilig (gmail->fmtheilig) for free and unrestricted use
# Developed and tested under Ubuntu 18.04
#
# Arguments
#  -f - Check for failed logon attempts
#  -s - Check for successful logons
#  -g - Use geolocation database to identify source
#  -e - Email output to admin
#  -a - Enable all options

VER="1.01"

usage()
{
   echo "chkacc ${VER} - Check auth.log for successful and failed remote logon attempts"
   echo " -f - Check for failed logon attempts"
   echo " -s - Check for successful logons"
   echo " -g - Use geolocation database to identify source"
   echo " -e - Email output to admin"
   echo " -a - Enable all options"
   echo " -h - Display this text"
   echo
}

# chklocal function determines if the target IP address is a local address (class C) and
# if the address appears in your /etc/hosts file. Output is the IP address, contents of
# hosts if present, "Local address" if local, and result of GeoIPLookup if otherwise.
function chklocal()
{
   local hname=$(grep $1 /etc/hosts | awk '{print $2}')
   local INHOSTS=0
   local ISLOCAL=0
   if [ ! -z "$hname" ] ; then
      INHOSTS=1
   fi

   if [ ${1:0:8} = "192.168." ] ; then
      ISLOCAL=1
   elif [ ${1:0:4} = "172." ] ; then
      if [ ${1:4:2} -ge 16 ] && [ ${1:4:2} -le 31 ] ; then
         ISLOCAL=1
      fi
   elif [ ${1:0:3} = "10." ] ; then
      ISLOCAL=1
   fi

   echo -n $1 "- "
   if [ "$ISLOCAL" = 1 ] ; then
      if [ "$INHOSTS" = 1 ] ; then
         echo $hname
      else
         echo "Local address"
      fi
   else
      if [ "$INHOSTS" = 1 ] ; then
         echo $hname"-"$(geoiplookup $1 | sed 's/GeoIP Country Edition://' 2> /dev/null)
      else
         echo $(geoiplookup $1 | sed 's/GeoIP Country Edition://' 2> /dev/null)
      fi
   fi
}

# Here begins the main program
# Change your From and To email address for the email function to work
TOEMAIL="you@mail.com"
FREMAIL="admin@mail.net"
# Change to how you want to identify your server
SERVERNAME=$HOSTNAME

# Flag variables
FAIL=0
SUCC=0
GEO=0
EMAIL=0

# Create and configure working directory if is does not exist
if [[ ! -d "/etc/chkacc" ]]; then
   sudo mkdir /etc/chkacc
   sudo chmod 777 /etc/chkacc
   echo "s/for invalid user  from/for \[BLANK\] from/" > /etc/chkacc/filter.sed
   echo "s/for invalid user/for/" >> /etc/chkacc/filter.sed
fi

# Display usage information if no parameter given
if [ $# = 0 ] ; then
   usage
   exit 0
fi

# Process command line options
while getopts ":fsgeah" opt; do
   case ${opt} in
      f ) FAIL=1 ;;
      s ) SUCC=1 ;;
      g ) GEO=1 ;;
      e ) EMAIL=1 ;;
      a ) FAIL=1; SUCC=1; GEO=1; EMAIL=1 ;;
      h ) usage ;;
      * ) echo "Usage: chkacc [-fsgeah] - Invalid argument:" $OPTARG 1>&2 ;;
   esac
done

# failed.txt and success.txt files are generated based on grep parameters. They are left behind
# for your curiosity. An 'outfile' is generated for display or email purposes.
# First we process for failed attempts.
if [ $FAIL = 1 ]; then
   zgrep -h "Failed password" /var/log/auth.log.4.gz /var/log/auth.log.3.gz /var/log/auth.log.2.gz \
     /var/log/auth.log.1 /var/log/auth.log 2> /dev/null | sed -f /etc/chkacc/filter.sed | tr -s ' ' | \
     cut -f1,2,3,9,11 -d ' ' > /etc/chkacc/failed.txt
   echo "Failed attempts by account" > /etc/chkacc/outfile
   cut -f4 -d ' ' /etc/chkacc/failed.txt | sort | uniq -c | sort -nr >> /etc/chkacc/outfile
   echo >> /etc/chkacc/outfile

   if [ $GEO = 1 ]; then
      echo "Failed attempts by geolocation" >> /etc/chkacc/outfile
      cut -f5 -d ' ' /etc/chkacc/failed.txt | sort | uniq | \
      (
         while read x; do
            chklocal $x
         done
      ) >> /etc/chkacc/outfile
      echo >> /etc/chkacc/outfile
   fi
fi

# Now we process for successfull logins
if [ $SUCC = 1 ]; then
   zgrep -h " Accepted" /var/log/auth.log.4.gz /var/log/auth.log.3.gz /var/log/auth.log.2.gz \
     /var/log/auth.log.1 /var/log/auth.log 2> /dev/null | tr -s ' ' | cut -f1,2,3,9,11 -d ' ' > /etc/chkacc/success.txt
   echo "Successful logins" >> /etc/chkacc/outfile
   cut -f5 -d ' ' /etc/chkacc/success.txt | sort | uniq -c | sort -nr >> /etc/chkacc/outfile
 
   if [ $GEO = 1 ]; then
      echo >> /etc/chkacc/outfile
      echo "Successful logins by geolocation" >> /etc/chkacc/outfile
      cut -f5 -d ' ' /etc/chkacc/success.txt | sort | uniq | \
      (
         while read x; do
            chklocal $x
         done
      ) >> /etc/chkacc/outfile
   fi
fi

# Display or email the outfile
if [ -f /etc/chkacc/outfile ]; then
   if [ $EMAIL = 1 ]; then
      cat /etc/chkacc/outfile | mail -s "chkacc report: ${SERVERNAME}" -a "From: ${FREMAIL}" $TOEMAIL
   else
      cat /etc/chkacc/outfile
   fi
   rm /etc/chkacc/outfile
fi
